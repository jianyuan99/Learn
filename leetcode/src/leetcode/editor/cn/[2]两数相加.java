//ÁªôÂá∫‰∏§‰∏™ ÈùûÁ©∫ ÁöÑÈìæË°®Áî®Êù•Ë°®Á§∫‰∏§‰∏™ÈùûË¥üÁöÑÊï¥Êï∞„ÄÇÂÖ∂‰∏≠ÔºåÂÆÉ‰ª¨ÂêÑËá™ÁöÑ‰ΩçÊï∞ÊòØÊåâÁÖß ÈÄÜÂ∫è ÁöÑÊñπÂºèÂ≠òÂÇ®ÁöÑÔºåÂπ∂‰∏îÂÆÉ‰ª¨ÁöÑÊØè‰∏™ËäÇÁÇπÂè™ËÉΩÂ≠òÂÇ® ‰∏Ä‰Ωç Êï∞Â≠ó„ÄÇ 
//
// Â¶ÇÊûúÔºåÊàë‰ª¨Â∞ÜËøô‰∏§‰∏™Êï∞Áõ∏Âä†Ëµ∑Êù•ÔºåÂàô‰ºöËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑÈìæË°®Êù•Ë°®Á§∫ÂÆÉ‰ª¨ÁöÑÂíå„ÄÇ 
//
// ÊÇ®ÂèØ‰ª•ÂÅáËÆæÈô§‰∫ÜÊï∞Â≠ó 0 ‰πãÂ§ñÔºåËøô‰∏§‰∏™Êï∞ÈÉΩ‰∏ç‰ºö‰ª• 0 ÂºÄÂ§¥„ÄÇ 
//
// Á§∫‰æãÔºö 
//
// ËæìÂÖ•Ôºö(2 -> 4 -> 3) + (5 -> 6 -> 4)
//ËæìÂá∫Ôºö7 -> 0 -> 8
//ÂéüÂõ†Ôºö342 + 465 = 807
// 
// Related Topics ÈìæË°® Êï∞Â≠¶ 
// üëç 5178 üëé 0


//leetcode submit region begin(Prohibit modification and deletion)
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int a=0;
        ListNode s=new ListNode((l1.val+l2.val)%10);
        ListNode p=s;
        a=(l1.val+l2.val)/10;
        l1=l1.next;
        l2=l2.next;
        while((l1!=null)&&(l2!=null)){
            p.next=new ListNode((l1.val+l2.val+a)%10);
            a=(l1.val+l2.val+a)/10;
            p=p.next;
            l1=l1.next;
            l2=l2.next;
        }
        while(l1!=null){
            p.next=new ListNode((l1.val+a)%10);
            a=(l1.val+a)/10;
            p=p.next;
            l1=l1.next;
        }
        while (l2!=null){
            p.next=new ListNode((l2.val+a)%10);
            a=(l2.val+a)/10;
            p=p.next;
            l2=l2.next;
        }
        if(a!=0){
            p.next=new ListNode(a);
        }
        return s;
    }
}
//leetcode submit region end(Prohibit modification and deletion)
